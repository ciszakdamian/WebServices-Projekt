#Microservice: 01-REST:
Info: The Rest API delivery full CRUD for movies database.
How to run: Execute on main directory "php artisan serve --port 8080"
Example dev root path: http://127.0.0.1:8080/

1. Show all movies
Returns json data about all movies.
- URL:
/api/movies
- Method:
GET
- URL Params:
none
- Example call:
curl --request GET 'http://127.0.0.1:8000/api/movies'
- Example response:
[
    {
        "id": 1,
        "title": "New title",
        "movie_cover": "avatar.jpg",
        "category": "Fantasy",
        "director_id": 1,
        "production_company_id": 1,
        "year_of_production": 2009,
        "plot_description": "A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home. When his brother is killed in a robbery, paraplegic Marine Jake Sully decides to take his place in a mission on the distant world of Pandora.",
        "price": "29.99"
    },
    {
        "id": 3,
        "title": "Title",
        "movie_cover": "Movie image",
        "category": "Category",
        "director_id": 1,
        "production_company_id": 1,
        "year_of_production": 2020,
        "plot_description": "bla bla bla",
        "price": "99.99"
    }
]

2. Select movie by id.
Returns json data about selected movie.
- URL:
/api/movies/:id
- Method:
GET
- URL Params:
id=[int]
- Example call:
curl --request GET 'http://127.0.0.1:8000/api/movies/1'
- Example response:
{
    "id": 1,
    "title": "Avatar",
    "movie_cover": "avatar.jpg",
    "category": "Fantasy",
    "director_id": 1,
    "production_company_id": 1,
    "year_of_production": 2009,
    "plot_description": "A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home. When his brother is killed in a robbery, paraplegic Marine Jake Sully decides to take his place in a mission on the distant world of Pandora.",
    "price": "29.99"
}
- Example error response:
{
    "message": "Movie not found!"
}

3. Add new movie to collection.
Add new movie to database and return movie with id.
- URL:
/api/movies/
- Method:
POST
- URL Params:
id=[integer]
title=[string]
movie_cover=[string]
category=[string]
director_id=[integer]
production_company_id=[integer]
year_of_production=[integer]
plot_description=[text]
price=[decimal]
- Example call:
curl --request POST 'http://127.0.0.1:8000/api/movies?title=Title&movie_cover=Movie%20image&category=Category&director_id=1&production_company_id=1&year_of_production=2020&plot_description=bla%20bla%20bla&price=99.99'
- Example response:
{
    "title": "Title",
    "movie_cover": "Movie image",
    "category": "Category",
    "director_id": "1",
    "production_company_id": "1",
    "year_of_production": "2020",
    "plot_description": "bla bla bla",
    "price": "99.99",
    "id": 2
}

4. Update movie by id
Update selected movie details by movie selected by id.
- URL:
/api/movies/:id
- Method:
PUT
- URL Params:
id=[integer]
title=[string]
movie_cover=[string]
category=[string]
director_id=[integer]
production_company_id=[integer]
year_of_production=[integer]
plot_description=[text]
price=[decimal]
- Example call:
curl --request PUT 'http://127.0.0.1:8000/api/movies/10?tytul=New%20title&rezyser=Damian%20Ciszak'
- Example response:
{
    "id": 1,
    "title": "New title",
    "movie_cover": "avatar.jpg",
    "category": "Fantasy",
    "director_id": "1",
    "production_company_id": 1,
    "year_of_production": 2009,
    "plot_description": "A paraplegic Marine dispatched to the moon Pandora on a unique mission becomes torn between following his orders and protecting the world he feels is his home. When his brother is killed in a robbery, paraplegic Marine Jake Sully decides to take his place in a mission on the distant world of Pandora.",
    "price": "29.99"
}
- Example error response:
"Movie not found!"

5. Delete movie by id
Delete selected movie by id.
- URL:
/api/movies/:id
- Method:
DELETE
- URL Params:
id=[int]
- Example call:
curl --request DELETE 'http://127.0.0.1:8000/api/movies/10'
- Example response:
{}
- Example error response:
{
    "message": "Movie not found!"
}



